(function (root, factory) {(typeof module === 'object' && module.exports) ? module.exports = factory() : root.HeliaJson = factory()}(typeof self !== 'undefined' ? self : this, function () {
"use strict";var HeliaJson=(()=>{var $=Object.defineProperty;var le=Object.getOwnPropertyDescriptor;var we=Object.getOwnPropertyNames;var be=Object.prototype.hasOwnProperty;var ge=(r,e)=>{for(var t in e)$(r,t,{get:e[t],enumerable:!0})},xe=(r,e,t,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of we(e))!be.call(r,o)&&o!==t&&$(r,o,{get:()=>e[o],enumerable:!(n=le(e,o))||n.enumerable});return r};var me=r=>xe($({},"__esModule",{value:!0}),r);var Ye={};ge(Ye,{json:()=>Ze});function ye(r,e){if(r.length>=255)throw new TypeError("Alphabet too long");for(var t=new Uint8Array(256),n=0;n<t.length;n++)t[n]=255;for(var o=0;o<r.length;o++){var s=r.charAt(o),i=s.charCodeAt(0);if(t[i]!==255)throw new TypeError(s+" is ambiguous");t[i]=o}var a=r.length,d=r.charAt(0),S=Math.log(a)/Math.log(256),f=Math.log(256)/Math.log(a);function C(c){if(c instanceof Uint8Array||(ArrayBuffer.isView(c)?c=new Uint8Array(c.buffer,c.byteOffset,c.byteLength):Array.isArray(c)&&(c=Uint8Array.from(c))),!(c instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(c.length===0)return"";for(var h=0,A=0,u=0,w=c.length;u!==w&&c[u]===0;)u++,h++;for(var b=(w-u)*f+1>>>0,p=new Uint8Array(b);u!==w;){for(var g=c[u],v=0,l=b-1;(g!==0||v<A)&&l!==-1;l--,v++)g+=256*p[l]>>>0,p[l]=g%a>>>0,g=g/a>>>0;if(g!==0)throw new Error("Non-zero carry");A=v,u++}for(var m=b-A;m!==b&&p[m]===0;)m++;for(var L=d.repeat(h);m<b;++m)L+=r.charAt(p[m]);return L}function V(c){if(typeof c!="string")throw new TypeError("Expected String");if(c.length===0)return new Uint8Array;var h=0;if(c[h]!==" "){for(var A=0,u=0;c[h]===d;)A++,h++;for(var w=(c.length-h)*S+1>>>0,b=new Uint8Array(w);c[h];){var p=t[c.charCodeAt(h)];if(p===255)return;for(var g=0,v=w-1;(p!==0||g<u)&&v!==-1;v--,g++)p+=a*b[v]>>>0,b[v]=p%256>>>0,p=p/256>>>0;if(p!==0)throw new Error("Non-zero carry");u=g,h++}if(c[h]!==" "){for(var l=w-u;l!==w&&b[l]===0;)l++;for(var m=new Uint8Array(A+(w-l)),L=A;l!==w;)m[L++]=b[l++];return m}}}function ue(c){var h=V(c);if(h)return h;throw new Error(`Non-${e} character`)}return{encode:C,decodeUnsafe:V,decode:ue}}var ve=ye,Ae=ve,K=Ae;var tt=new Uint8Array(0);var H=(r,e)=>{if(r===e)return!0;if(r.byteLength!==e.byteLength)return!1;for(let t=0;t<r.byteLength;t++)if(r[t]!==e[t])return!1;return!0},E=r=>{if(r instanceof Uint8Array&&r.constructor.name==="Uint8Array")return r;if(r instanceof ArrayBuffer)return new Uint8Array(r);if(ArrayBuffer.isView(r))return new Uint8Array(r.buffer,r.byteOffset,r.byteLength);throw new Error("Unknown type, must be binary type")};var k=class{constructor(e,t,n){this.name=e,this.prefix=t,this.baseEncode=n}encode(e){if(e instanceof Uint8Array)return`${this.prefix}${this.baseEncode(e)}`;throw Error("Unknown type, must be binary type")}},F=class{constructor(e,t,n){if(this.name=e,this.prefix=t,t.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=t.codePointAt(0),this.baseDecode=n}decode(e){if(typeof e=="string"){if(e.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(e.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(e){return W(this,e)}},j=class{constructor(e){this.decoders=e}or(e){return W(this,e)}decode(e){let t=e[0],n=this.decoders[t];if(n)return n.decode(e);throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}},W=(r,e)=>new j({...r.decoders||{[r.prefix]:r},...e.decoders||{[e.prefix]:e}}),q=class{constructor(e,t,n,o){this.name=e,this.prefix=t,this.baseEncode=n,this.baseDecode=o,this.encoder=new k(e,t,n),this.decoder=new F(e,t,o)}encode(e){return this.encoder.encode(e)}decode(e){return this.decoder.decode(e)}},Z=({name:r,prefix:e,encode:t,decode:n})=>new q(r,e,t,n),R=({prefix:r,name:e,alphabet:t})=>{let{encode:n,decode:o}=K(t,e);return Z({prefix:r,name:e,encode:n,decode:s=>E(o(s))})},Se=(r,e,t,n)=>{let o={};for(let f=0;f<e.length;++f)o[e[f]]=f;let s=r.length;for(;r[s-1]==="=";)--s;let i=new Uint8Array(s*t/8|0),a=0,d=0,S=0;for(let f=0;f<s;++f){let C=o[r[f]];if(C===void 0)throw new SyntaxError(`Non-${n} character`);d=d<<t|C,a+=t,a>=8&&(a-=8,i[S++]=255&d>>a)}if(a>=t||255&d<<8-a)throw new SyntaxError("Unexpected end of data");return i},Ce=(r,e,t)=>{let n=e[e.length-1]==="=",o=(1<<t)-1,s="",i=0,a=0;for(let d=0;d<r.length;++d)for(a=a<<8|r[d],i+=8;i>t;)i-=t,s+=e[o&a>>i];if(i&&(s+=e[o&a<<t-i]),n)for(;s.length*t&7;)s+="=";return s},x=({name:r,prefix:e,bitsPerChar:t,alphabet:n})=>Z({prefix:e,name:r,encode(o){return Ce(o,n,t)},decode(o){return Se(o,n,t,r)}});var I=x({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),ct=x({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),at=x({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),dt=x({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),ht=x({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),ft=x({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),pt=x({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),ut=x({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),lt=x({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5});var y=R({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),gt=R({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"});var Ee=ee,Y=128,Ue=127,De=~Ue,ze=Math.pow(2,31);function ee(r,e,t){e=e||[],t=t||0;for(var n=t;r>=ze;)e[t++]=r&255|Y,r/=128;for(;r&De;)e[t++]=r&255|Y,r>>>=7;return e[t]=r|0,ee.bytes=t-n+1,e}var Ie=J,Me=128,_=127;function J(r,n){var t=0,n=n||0,o=0,s=n,i,a=r.length;do{if(s>=a)throw J.bytes=0,new RangeError("Could not decode varint");i=r[s++],t+=o<28?(i&_)<<o:(i&_)*Math.pow(2,o),o+=7}while(i>=Me);return J.bytes=s-n,t}var Ne=Math.pow(2,7),Oe=Math.pow(2,14),Te=Math.pow(2,21),Ve=Math.pow(2,28),Le=Math.pow(2,35),Be=Math.pow(2,42),$e=Math.pow(2,49),ke=Math.pow(2,56),Fe=Math.pow(2,63),je=function(r){return r<Ne?1:r<Oe?2:r<Te?3:r<Ve?4:r<Le?5:r<Be?6:r<$e?7:r<ke?8:r<Fe?9:10},qe={encode:Ee,decode:Ie,encodingLength:je},Re=qe,M=Re;var N=(r,e=0)=>[M.decode(r,e),M.decode.bytes],U=(r,e,t=0)=>(M.encode(r,e,t),e),D=r=>M.encodingLength(r);var O=(r,e)=>{let t=e.byteLength,n=D(r),o=n+D(t),s=new Uint8Array(o+t);return U(r,s,0),U(t,s,n),s.set(e,o),new z(r,t,e,s)},re=r=>{let e=E(r),[t,n]=N(e),[o,s]=N(e.subarray(n)),i=e.subarray(n+s);if(i.byteLength!==o)throw new Error("Incorrect length");return new z(t,o,i,e)},ne=(r,e)=>{if(r===e)return!0;{let t=e;return r.code===t.code&&r.size===t.size&&t.bytes instanceof Uint8Array&&H(r.bytes,t.bytes)}},z=class{constructor(e,t,n,o){this.code=e,this.size=t,this.digest=n,this.bytes=o}};var se=(r,e)=>{let{bytes:t,version:n}=r;switch(n){case 0:return Pe(t,P(r),e||y.encoder);default:return Qe(t,P(r),e||I.encoder)}};var ie=new WeakMap,P=r=>{let e=ie.get(r);if(e==null){let t=new Map;return ie.set(r,t),t}return e},B=class r{constructor(e,t,n,o){this.code=t,this.version=e,this.multihash=n,this.bytes=o,this["/"]=o}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{let{code:e,multihash:t}=this;if(e!==T)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(t.code!==Ge)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return r.createV0(t)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{let{code:e,digest:t}=this.multihash,n=O(e,t);return r.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return r.equals(this,e)}static equals(e,t){let n=t;return n&&e.code===n.code&&e.version===n.version&&ne(e.multihash,n.multihash)}toString(e){return se(this,e)}toJSON(){return{"/":se(this)}}link(){return this}get[Symbol.toStringTag](){return"CID"}[Symbol.for("nodejs.util.inspect.custom")](){return`CID(${this.toString()})`}static asCID(e){if(e==null)return null;let t=e;if(t instanceof r)return t;if(t["/"]!=null&&t["/"]===t.bytes||t.asCID===t){let{version:n,code:o,multihash:s,bytes:i}=t;return new r(n,o,s,i||ce(n,o,s.bytes))}else if(t[Xe]===!0){let{version:n,multihash:o,code:s}=t,i=re(o);return r.create(n,s,i)}else return null}static create(e,t,n){if(typeof t!="number")throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:{if(t!==T)throw new Error(`Version 0 CID must use dag-pb (code: ${T}) block encoding`);return new r(e,t,n,n.bytes)}case 1:{let o=ce(e,t,n.bytes);return new r(e,t,n,o)}default:throw new Error("Invalid version")}}static createV0(e){return r.create(0,T,e)}static createV1(e,t){return r.create(1,e,t)}static decode(e){let[t,n]=r.decodeFirst(e);if(n.length)throw new Error("Incorrect length");return t}static decodeFirst(e){let t=r.inspectBytes(e),n=t.size-t.multihashSize,o=E(e.subarray(n,n+t.multihashSize));if(o.byteLength!==t.multihashSize)throw new Error("Incorrect length");let s=o.subarray(t.multihashSize-t.digestSize),i=new z(t.multihashCode,t.digestSize,s,o);return[t.version===0?r.createV0(i):r.createV1(t.codec,i),e.subarray(t.size)]}static inspectBytes(e){let t=0,n=()=>{let[C,V]=N(e.subarray(t));return t+=V,C},o=n(),s=T;if(o===18?(o=0,t=0):s=n(),o!==0&&o!==1)throw new RangeError(`Invalid CID version ${o}`);let i=t,a=n(),d=n(),S=t+d,f=S-i;return{version:o,codec:s,multihashCode:a,digestSize:d,multihashSize:f,size:S}}static parse(e,t){let[n,o]=Je(e,t),s=r.decode(o);if(s.version===0&&e[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return P(s).set(n,e),s}},Je=(r,e)=>{switch(r[0]){case"Q":{let t=e||y;return[y.prefix,t.decode(`${y.prefix}${r}`)]}case y.prefix:{let t=e||y;return[y.prefix,t.decode(r)]}case I.prefix:{let t=e||I;return[I.prefix,t.decode(r)]}default:{if(e==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[r[0],e.decode(r)]}}},Pe=(r,e,t)=>{let{prefix:n}=t;if(n!==y.prefix)throw Error(`Cannot string encode V0 in ${t.name} encoding`);let o=e.get(n);if(o==null){let s=t.encode(r).slice(1);return e.set(n,s),s}else return o},Qe=(r,e,t)=>{let{prefix:n}=t,o=e.get(n);if(o==null){let s=t.encode(r);return e.set(n,s),s}else return o},T=112,Ge=18,ce=(r,e,t)=>{let n=D(r),o=n+D(e),s=new Uint8Array(o+t.byteLength);return U(r,s,0),U(e,s,n),s.set(t,o),s},Xe=Symbol.for("@ipld/js-cid/CID");var Ke=new TextEncoder,He=new TextDecoder;var ae=512,de=r=>Ke.encode(JSON.stringify(r)),he=r=>JSON.parse(He.decode(r));var G=({name:r,code:e,encode:t})=>new Q(r,e,t),Q=class{constructor(e,t,n){this.name=e,this.code=t,this.encode=n}digest(e){if(e instanceof Uint8Array){let t=this.encode(e);return t instanceof Uint8Array?O(this.code,t):t.then(n=>O(this.code,n))}else throw Error("Unknown type, must be binary type")}};var fe=r=>async e=>new Uint8Array(await crypto.subtle.digest(r,e)),pe=G({name:"sha2-256",code:18,encode:fe("SHA-256")}),It=G({name:"sha2-512",code:19,encode:fe("SHA-512")});var X=class{components;constructor(e){this.components=e}async add(e,t={}){let n=de(e),o=await(t.hasher??pe).digest(n),s=B.createV1(ae,o);return await this.components.blockstore.put(s,n,t),s}async get(e,t={}){let n=await this.components.blockstore.get(e,t);return he(n)}};function Ze(r){return new X(r)}return me(Ye);})();
return HeliaJson}));
